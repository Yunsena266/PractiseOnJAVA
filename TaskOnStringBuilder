/*
Вам дан список ролей и сценарий пьесы в виде массива строчек.

Каждая строчка сценария пьесы дана в следующем виде:
Роль: текст

Текст может содержать любые символы.

Напишите метод, который будет группировать строчки по ролям, пронумеровывать их и возвращать результат в виде готового текста (см. пример). Каждая группа распечатывается в следующем виде:

Роль:
i) текст
j) текст2
...
==перевод строки==

i и j -- номера строк в сценарии. Индексация строчек начинается с единицы, выводить группы следует в соответствии с порядком ролей. Переводы строк между группами обязательны, переводы строк в конце текста не учитываются.

Заметим, что вам предстоит обработка огромной пьесы в 50 000 строк для 10 ролей – соответственно, неправильная сборка результирующей строчки может выйти за ограничение по времени.


*/

package TaskOnJava

public class TaskOnStringBuilder () {
      public static void main (String[] args) {
            String [] roles= {
        "Городничий","Аммос Федорович",
        "Артемий Филиппович",
        "Лука Лукич"};
String [] textLines={
        "Городничий: Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.",
        "Аммос Федорович: Как ревизор?",
        "Артемий Филиппович: Как ревизор?",
        "Городничий: Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.",
        "Аммос Федорович: Вот те на!",
        "Артемий Филиппович: Вот не было заботы, так подай!",
        "Лука Лукич: Господи боже! еще и с секретным предписаньем!"};
             System.out.print(printTextPerRole(roles,textLines));
      
      }
      
      private String printTextPerRole(String[] roles, String[] textLines) {
    int l;
    StringBuilder val = new StringBuilder() ;
    StringBuilder res = new StringBuilder() ;
    String part = new String();
    String partbefore = new String();
    for (int i =0 ; i < roles.length; i++) {
        for (int j =0 ; j < textLines.length; j++) {
            l = textLines[j].indexOf(":") ;
             partbefore = textLines[j].substring(0,l);
            part = textLines[j].substring(l + 1);
            if (partbefore.equals(roles[i])) {
                 val.append( (j + 1) + ")" + part + "\n" );
            } 
        }
        res.append( roles[i] + ":" + "\n"  + val + "\n");
        val.delete(0,val.length());
    }
    return res.toString();
}

}
